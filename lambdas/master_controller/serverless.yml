# serverless.yml

service: masterLambdaOverseer

provider:
  name: aws
  runtime: python2.7
  stage: envname
  region: eu-west-1
  stackName: cf-overseer-${self:provider.stage} # Overwrite default CloudFormation stack name. Default is ${self:service}-${self:provider.stage}
  profile: envname
  memorySize: 128
  timeout: 10
  deploymentBucket:
    name: overseer.serverless.${self:provider.region}.deploys # Overwrite the default deployment bucket
    serverSideEncryption: AES256 # when using server-side encryption
  deploymentPrefix: serverless # Overwrite the default S3 prefix under which deployed artifacts should be stored. Default is serverless
  versionFunctions: false # Optional function versioning
  stackTags: # Optional CF stack tags
    app: overseer
  iamRoleStatements:
      - Effect: 'Allow'
        Action:
          - 'ssm:GetParameter'
        Resource:
          Fn::Join:
            - ':'
            - - 'arn:aws:ssm'
              - Ref: 'AWS::Region'
              - Ref: 'AWS::AccountId'
              - 'parameter/overseer-slack-hook-secret'
      - Effect: 'Allow'
        Action:
          - 'lambda:InvokeFunction'
        Resource:
          Fn::Join:
            - ':'
            - - 'arn:aws:lambda'
              - Ref: 'AWS::Region'
              - Ref: 'AWS::AccountId'
              - 'function:overseer-certificates-envname'

functions:
  masterLambda: # A Function
    handler: lambda_mc.lambda_handler
    name: overseer-${self:provider.stage} # optional, Deployed Lambda name
    description: Overseer Master Control Program (OMCP)
    runtime: python2.7 # optional overwrite, default is provider runtime
    events:
      - schedule: cron(0/10 * * * ? *)

package:
  include:
    - ../../minions/python/**
